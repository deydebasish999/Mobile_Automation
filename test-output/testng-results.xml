<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-06T16:04:01 IST" name="Default suite" finished-at="2023-12-06T16:08:47 IST" duration-ms="285632">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-12-06T16:04:01 IST" name="Default test" finished-at="2023-12-06T16:08:47 IST" duration-ms="285632">
      <class name="testRunners.EcommTestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:04:01 IST" name="setUpClass" finished-at="2023-12-06T16:04:03 IST" duration-ms="1956" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="startAppium()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:04:03 IST" name="startAppium" finished-at="2023-12-06T16:04:39 IST" duration-ms="35636" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppium -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:04:39 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-06T16:04:53 IST" duration-ms="14257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Form Filling"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Ecommerece App Testing]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ssonfail(org.testng.ITestResult)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:04:53 IST" name="ssonfail" finished-at="2023-12-06T16:04:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssonfail -->
        <test-method is-config="true" signature="startAppium()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:04:53 IST" name="startAppium" finished-at="2023-12-06T16:05:24 IST" duration-ms="31486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppium -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:05:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-06T16:05:27 IST" duration-ms="2387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validating error message on not providing name field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Ecommerece App Testing]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ssonfail(org.testng.ITestResult)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:05:27 IST" name="ssonfail" finished-at="2023-12-06T16:05:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssonfail -->
        <test-method is-config="true" signature="startAppium()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:05:27 IST" name="startAppium" finished-at="2023-12-06T16:05:58 IST" duration-ms="31182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppium -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:05:58 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-06T16:06:30 IST" duration-ms="31951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Adding product to cart"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Ecommerece App Testing]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ssonfail(org.testng.ITestResult)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:06:30 IST" name="ssonfail" finished-at="2023-12-06T16:06:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssonfail -->
        <test-method is-config="true" signature="startAppium()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:06:30 IST" name="startAppium" finished-at="2023-12-06T16:07:01 IST" duration-ms="31408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppium -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:07:01 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-06T16:07:25 IST" duration-ms="23158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify total cart amount"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Ecommerece App Testing]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ssonfail(org.testng.ITestResult)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:07:25 IST" name="ssonfail" finished-at="2023-12-06T16:07:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=SUCCESS method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssonfail -->
        <test-method is-config="true" signature="startAppium()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:07:25 IST" name="startAppium" finished-at="2023-12-06T16:07:55 IST" duration-ms="30048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startAppium -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:07:55 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-12-06T16:08:30 IST" duration-ms="35040" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Validate buying the products"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Ecommerece App Testing]"]]>
              </value>
            </param>
          </params>
          <exception class="io.appium.java_client.NoSuchContextException">
            <message>
              <![CDATA[No such context found.
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-BLROCT01', ip: '192.168.29.245', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.5'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\KPMG\git\Mobile_Au..., appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, automationName: uiautomator2, chromedriverExecutable: C:\Users\KPMG\git\Mobile_Au..., databaseEnabled: false, desired: {app: C:\Users\KPMG\git\Mobile_Au..., appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, automationName: uiautomator2, chromedriverExecutable: C:\Users\KPMG\git\Mobile_Au..., deviceName: emulator-5554, platformName: android, platformVersion: 12.0, resetKeyboard: true, unicodeKeyboard: true}, deviceApiLevel: 31, deviceManufacturer: Google, deviceModel: sdk_gphone64_x86_64, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 12, resetKeyboard: true, statBarHeight: 63, takesScreenshot: true, unicodeKeyboard: true, viewportRect: {height: 2211, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: c46f858d-3d83-4d69-b798-99c797b2eab2]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.appium.java_client.NoSuchContextException: No such context found.
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-BLROCT01', ip: '192.168.29.245', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.5'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\KPMG\git\Mobile_Au..., appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, automationName: uiautomator2, chromedriverExecutable: C:\Users\KPMG\git\Mobile_Au..., databaseEnabled: false, desired: {app: C:\Users\KPMG\git\Mobile_Au..., appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, automationName: uiautomator2, chromedriverExecutable: C:\Users\KPMG\git\Mobile_Au..., deviceName: emulator-5554, platformName: android, platformVersion: 12.0, resetKeyboard: true, unicodeKeyboard: true}, deviceApiLevel: 31, deviceManufacturer: Google, deviceModel: sdk_gphone64_x86_64, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 12, resetKeyboard: true, statBarHeight: 63, takesScreenshot: true, unicodeKeyboard: true, viewportRect: {height: 2211, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: c46f858d-3d83-4d69-b798-99c797b2eab2
at io.appium.java_client.AppiumDriver.context(AppiumDriver.java:232)
at utility.GenericMethods.switchToWebView(GenericMethods.java:223)
at actions.EcommerceAppActions.buyProduct(EcommerceAppActions.java:142)
at stepDefinitions.EcommerceAppSteps.i_verify_the_terms_and_conditions_functionality_check_the_promotional_checkbox_and_click_proceed_to_buy(EcommerceAppSteps.java:83)
at ✽.I verify the terms and conditions functionality,check the promotional checkbox and click proceed to buy(file:///C:/Users/KPMG/git/Mobile_Automation/src/test/resources/featureFiles/EcommerceApp.feature:51)
Caused by: org.openqa.selenium.WebDriverException: No such context found.
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'IN-BLROCT01', ip: '192.168.29.245', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '17.0.5'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {app: C:\Users\KPMG\git\Mobile_Au..., appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, automationName: uiautomator2, chromedriverExecutable: C:\Users\KPMG\git\Mobile_Au..., databaseEnabled: false, desired: {app: C:\Users\KPMG\git\Mobile_Au..., appActivity: com.androidsample.generalst..., appPackage: com.androidsample.generalstore, automationName: uiautomator2, chromedriverExecutable: C:\Users\KPMG\git\Mobile_Au..., deviceName: emulator-5554, platformName: android, platformVersion: 12.0, resetKeyboard: true, unicodeKeyboard: true}, deviceApiLevel: 31, deviceManufacturer: Google, deviceModel: sdk_gphone64_x86_64, deviceName: emulator-5554, deviceScreenDensity: 420, deviceScreenSize: 1080x2400, deviceUDID: emulator-5554, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: Android, platformVersion: 12, resetKeyboard: true, statBarHeight: 63, takesScreenshot: true, unicodeKeyboard: true, viewportRect: {height: 2211, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: c46f858d-3d83-4d69-b798-99c797b2eab2
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:247)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at io.appium.java_client.AppiumDriver.context(AppiumDriver.java:229)
at utility.GenericMethods.switchToWebView(GenericMethods.java:223)
at actions.EcommerceAppActions.buyProduct(EcommerceAppActions.java:142)
at stepDefinitions.EcommerceAppSteps.i_verify_the_terms_and_conditions_functionality_check_the_promotional_checkbox_and_click_proceed_to_buy(EcommerceAppSteps.java:83)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at io.cucumber.java.Invoker.doInvoke(Invoker.java:66)
at io.cucumber.java.Invoker.invoke(Invoker.java:24)
at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)
at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)
at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)
at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)
at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)
at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)
at io.cucumber.core.runner.TestStep.run(TestStep.java:64)
at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)
at io.cucumber.core.runner.TestCase.run(TestCase.java:104)
at io.cucumber.core.runner.Runner.runPickle(Runner.java:71)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$0(TestNGCucumberRunner.java:116)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:117)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:113)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.appium.java_client.NoSuchContextException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="ssonfail(org.testng.ITestResult)[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:08:30 IST" name="ssonfail" finished-at="2023-12-06T16:08:31 IST" duration-ms="1134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=runScenario status=FAILURE method=AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.EcommTestRunner@f78a47e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ssonfail -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:08:31 IST" name="tearDownClass" finished-at="2023-12-06T16:08:44 IST" duration-ms="13571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:08:44 IST" name="closeApp" finished-at="2023-12-06T16:08:47 IST" duration-ms="2275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testRunners.EcommTestRunner@f78a47e]" started-at="2023-12-06T16:08:47 IST" name="tearDown" finished-at="2023-12-06T16:08:48 IST" duration-ms="1601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testRunners.EcommTestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
